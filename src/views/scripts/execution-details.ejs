<!-- src/views/scripts/execution-details.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Execution Details | Mountain Auth</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="/css/style.css">
  <style>
    /* Execution details specific styles */
    .execution-details {
      background-color: var(--glass-bg);
      backdrop-filter: blur(12px);
      -webkit-backdrop-filter: blur(12px);
      border-radius: 1rem;
      border: 1px solid var(--glass-border);
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
      padding: 1.5rem;
      margin-bottom: 2rem;
      animation: fadeIn 0.5s ease-out forwards;
    }
    
    .details-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 1.5rem;
      border-bottom: 1px solid var(--border-color);
      padding-bottom: 1rem;
    }
    
    .details-title {
      font-size: 1.5rem;
      font-weight: 600;
      color: white;
    }
    
    .back-button {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      color: white;
      background-color: rgba(255, 255, 255, 0.1);
      border: 1px solid var(--border-color);
      border-radius: 0.5rem;
      padding: 0.5rem 0.75rem;
      text-decoration: none;
      transition: all 0.2s;
    }
    
    .back-button:hover {
      background-color: rgba(255, 255, 255, 0.2);
      transform: translateY(-2px);
    }
    
    .execution-info {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 1.5rem;
      margin-bottom: 2rem;
    }
    
    .info-card {
      background-color: rgba(255, 255, 255, 0.05);
      border-radius: 0.5rem;
      border: 1px solid var(--border-color);
      padding: 1rem;
    }
    
    .info-label {
      font-size: 0.875rem;
      opacity: 0.7;
      margin-bottom: 0.5rem;
    }
    
    .info-value {
      font-size: 1.1rem;
      font-weight: 500;
    }
    
    .execution-status {
      display: inline-block;
      padding: 0.25rem 0.5rem;
      border-radius: 0.5rem;
      font-size: 0.875rem;
      font-weight: bold;
      text-transform: uppercase;
    }
    
    .status-completed {
      background-color: rgba(46, 204, 113, 0.2);
      color: #2ecc71;
    }
    
    .status-failed {
      background-color: rgba(231, 76, 60, 0.2);
      color: #e74c3c;
    }
    
    .status-running {
      background-color: rgba(243, 156, 18, 0.2);
      color: #f39c12;
    }
    
    .status-pending {
      background-color: rgba(149, 165, 166, 0.2);
      color: #bdc3c7;
    }
    
    .parameters-section,
    .output-section,
    .error-section {
      margin-bottom: 2rem;
    }
    
    .section-title {
      font-size: 1.25rem;
      font-weight: 600;
      margin-bottom: 1rem;
      color: white;
    }
    
    .params-table {
      width: 100%;
      border-collapse: separate;
      border-spacing: 0;
    }
    
    .params-table th,
    .params-table td {
      text-align: left;
      padding: 0.75rem 1rem;
    }
    
    .params-table th {
      background-color: rgba(255, 255, 255, 0.1);
      font-weight: 600;
    }
    
    .params-table th:first-child {
      border-top-left-radius: 0.5rem;
    }
    
    .params-table th:last-child {
      border-top-right-radius: 0.5rem;
    }
    
    .params-table tr:last-child td:first-child {
      border-bottom-left-radius: 0.5rem;
    }
    
    .params-table tr:last-child td:last-child {
      border-bottom-right-radius: 0.5rem;
    }
    
    .params-table tbody tr {
      background-color: rgba(255, 255, 255, 0.05);
    }
    
    .params-table tbody tr:nth-child(even) {
      background-color: rgba(255, 255, 255, 0.02);
    }
    
    .output-content {
      background-color: rgba(0, 0, 0, 0.3);
      border-radius: 0.5rem;
      padding: 1rem;
      font-family: 'Courier New', monospace;
      white-space: pre-wrap;
      overflow-x: auto;
      max-height: 400px;
      overflow-y: auto;
    }
    
    .error-content {
      background-color: rgba(231, 76, 60, 0.1);
      border: 1px solid rgba(231, 76, 60, 0.3);
      border-radius: 0.5rem;
      padding: 1rem;
      color: #e74c3c;
      font-family: 'Courier New', monospace;
      white-space: pre-wrap;
      overflow-x: auto;
    }
    
    .actions-section {
      display: flex;
      justify-content: center;
      gap: 1rem;
      margin-top: 2rem;
    }
    
    .action-button {
      background-color: var(--primary-color);
      color: white;
      border: none;
      border-radius: 0.5rem;
      padding: 0.75rem 1.25rem;
      font-size: 1rem;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.2s;
    }
    
    .action-button:hover {
      background-color: var(--primary-hover);
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }
    
    @keyframes fadeIn {
      0% {
        opacity: 0;
        transform: translateY(20px);
      }
      100% {
        opacity: 1;
        transform: translateY(0);
      }
    }
  </style>
</head>
<body>
  <div class="dashboard-container">
    <header class="dashboard-header">
      <a href="/dashboard" class="logo">Mountain Auth</a>
      
      <div class="nav-links">
        <a href="/dashboard" class="nav-link">Dashboard</a>
        <a href="/scripts" class="nav-link">Scripts</a>
        <a href="/scripts/history" class="nav-link active">Execution History</a>
        <% if (user.role === 'admin') { %>
          <a href="/admin" class="nav-link">Admin</a>
        <% } %>
      </div>
      
      <div class="user-info">
        <span class="username"><%= user.username %></span>
        <span class="role"><%= user.role %></span>
        <a href="/auth/logout" class="btn btn-outline">Logout</a>
      </div>
    </header>
    
    <main class="admin-main">
      <div class="execution-details">
        <div class="details-header">
          <h2 class="details-title">
            Execution Details - <%= execution.scriptId ? execution.scriptId.name : 'Unknown Script' %>
          </h2>
          
          <a href="/scripts/history" class="back-button">
            &larr; Back to History
          </a>
        </div>
        
        <div class="execution-info">
          <div class="info-card">
            <div class="info-label">Script</div>
            <div class="info-value">
              <%= execution.scriptId ? execution.scriptId.name : 'Unknown Script' %>
            </div>
          </div>
          
          <div class="info-card">
            <div class="info-label">Status</div>
            <div class="info-value">
              <span class="execution-status status-<%= execution.status %>">
                <%= execution.status %>
              </span>
            </div>
          </div>
          
          <div class="info-card">
            <div class="info-label">Started By</div>
            <div class="info-value">
              <%= execution.userId ? execution.userId.username : 'Unknown User' %>
            </div>
          </div>
          
          <div class="info-card">
            <div class="info-label">Start Time</div>
            <div class="info-value">
              <%= new Date(execution.startTime).toLocaleString() %>
            </div>
          </div>
          
          <% if (execution.endTime) { %>
            <div class="info-card">
              <div class="info-label">End Time</div>
              <div class="info-value">
                <%= new Date(execution.endTime).toLocaleString() %>
              </div>
            </div>
            
            <div class="info-card">
              <div class="info-label">Duration</div>
              <div class="info-value">
                <% 
                  const durationMs = new Date(execution.endTime) - new Date(execution.startTime);
                  const seconds = Math.floor(durationMs / 1000);
                  
                  let duration;
                  if (seconds < 60) {
                    duration = `${seconds} seconds`;
                  } else {
                    const minutes = Math.floor(seconds / 60);
                    const remainingSeconds = seconds % 60;
                    duration = `${minutes} minutes, ${remainingSeconds} seconds`;
                  }
                %>
                <%= duration %>
              </div>
            </div>
          <% } else if (execution.status === 'running' || execution.status === 'pending') { %>
            <div class="info-card">
              <div class="info-label">Duration</div>
              <div class="info-value">
                <% if (execution.status === 'running') { %>
                  Running...
                <% } else { %>
                  Pending...
                <% } %>
              </div>
            </div>
          <% } %>
        </div>
        
        <% if (execution.parameters && Object.keys(execution.parameters).length > 0) { %>
          <div class="parameters-section">
            <h3 class="section-title">Parameters</h3>
            <table class="params-table">
              <thead>
                <tr>
                  <th>Parameter</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                <% 
                  // Convert parameters from Map to Object if needed
                  let params = execution.parameters;
                  if (typeof Map !== 'undefined' && execution.parameters instanceof Map) {
                    params = {};
                    execution.parameters.forEach((value, key) => {
                      params[key] = value;
                    });
                  }
                  
                  Object.keys(params).forEach(function(key) {
                    const value = params[key];
                %>
                  <tr>
                    <td><strong><%= key %></strong></td>
                    <td>
                      <% if (typeof value === 'object' && value !== null) { %>
                        <%= JSON.stringify(value) %>
                      <% } else { %>
                        <%= value %>
                      <% } %>
                    </td>
                  </tr>
                <% }); %>
              </tbody>
            </table>
          </div>
        <% } %>
        
        <% if (execution.output) { %>
          <div class="output-section">
            <h3 class="section-title">Output</h3>
            <pre class="output-content"><%= execution.output %></pre>
          </div>
        <% } %>
        
        <% if (execution.error) { %>
          <div class="error-section">
            <h3 class="section-title">Error</h3>
            <div class="error-content"><%= execution.error %></div>
          </div>
        <% } %>
        
        <div class="actions-section">
          <% if (execution.scriptId && (execution.status === 'completed' || execution.status === 'failed')) { %>
            <a href="/scripts/execute/<%= execution.scriptId._id %>" class="action-button">
              Run Again
            </a>
          <% } %>
          
          <% if (user.role === 'admin') { %>
            <button id="deleteExecution" class="action-button" style="background-color: var(--danger-color);">
              Delete Record
            </button>
          <% } %>
        </div>
      </div>
    </main>
    
    <footer class="dashboard-footer">
      <p>&copy; <%= new Date().getFullYear() %> Mountain Auth | Beautifully Secure</p>
    </footer>
  </div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Handle delete button click
    const deleteBtn = document.getElementById('deleteExecution');
    if (deleteBtn) {
      deleteBtn.addEventListener('click', function() {
        if (confirm('Are you sure you want to delete this execution record? This action cannot be undone.')) {
          // Send delete request
          fetch('/scripts/execution/<%= execution._id %>', {
            method: 'DELETE',
            headers: {
              'Content-Type': 'application/json'
            }
          })
          .then(response => {
            if (response.ok) {
              window.location.href = '/scripts/history?deleted=true';
            } else {
              alert('Failed to delete execution record');
            }
          })
          .catch(error => {
            console.error('Error deleting execution record:', error);
            alert('An error occurred while deleting the execution record');
          });
        }
      });
    }
    
    // Auto-refresh for running executions
    var status = "<%= execution.status %>";
    if (status === 'running' || status === 'pending') {
      setTimeout(function() {
        window.location.reload();
      }, 5000); // Refresh every 5 seconds
    }
  });
</script>
</body>
</html>